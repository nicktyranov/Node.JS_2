//forms
//Практика на формы в Express
import express, { query } from 'express';
import expressHandlebars from 'express-handlebars';
import bodyParser from 'body-parser';

const handlebars = expressHandlebars.create({
	defaultLayout: 'main',
	extname: 'hbs',
	helpers: {
		timeRN: function () {
			return new Intl.DateTimeFormat('US-us', {
				hour: '2-digit',
				minute: '2-digit',
				second: '2-digit'
			}).format(new Date());
		},
		sqrt: function (value) {
			return Math.sqrt(value);
		},
		round1: function (value) {
			return value.toFixed(1);
		},
		sum: function (...rest) {
			let sum = 0;
			[...rest].forEach((item) => (sum += isNaN(item) ? 0 : item));
			return sum;
		},

		makeImgTag: function (src, alt) {
			return `<img src="${src}" alt="${alt}">`;
		}
	}
});

let app = express();
app.engine('hbs', handlebars.engine);
app.set('view engine', 'hbs');

app.get('/', (req, res) => {
	console.log('Main');
	res.send('Main');
});
app.get('/favicon.ico', (req, res) => res.status(204).end());

// №1⊗jsPmSMMA
// Напишите скрипт, который будет преобразовывать температуру из градусов Цельсия в градусы Фаренгейта. Для этого сделайте инпут и кнопку
app.get('/211', (req, res) => {
	if (req.query) {
		res.render('task1', {
			result: (req.query.temp * 9) / 5 + 32
		});
	} else {
		res.render('task1');
	}
});

// №2⊗jsPmSMMA
// Напишите скрипт, который будет считать факториал числа. Само число вводится в инпут и после нажатия на кнопку пользователь должен увидеть результат.
function calc(num) {
	let result = 1;
	for (let i = 1; i <= num; i++) {
		result *= i;
	}
	return result;
}

app.get('/212', (req, res) => {
	if (req.query) {
		res.render('task2', {
			result: calc(Number(req.query.num))
		});
	} else {
		res.render('task2');
	}
});

// №3⊗jsPmSMMA
// Дан инпут и кнопка. В инпут вводится число. По нажатию на кнопку выведите список делителей этого числа.
const listDividers = (num) => {
	let result = [];
	for (let i = 1; i <= num; i++) {
		if (num % i === 0) {
			result.push(i);
		}
	}
	return result.join(', ');
};

app.get('/213', (req, res) => {
	if (req.query) {
		res.render('task3', {
			result: listDividers(Number(req.query.num))
		});
	} else {
		res.render('task3');
	}
});

// №4⊗jsPmSMMA
// Даны 2 инпута и кнопка. В инпуты вводятся числа. По нажатию на кнопку выведите список общих делителей этих двух чисел.
const findSimilarDividers = (...nums) => {
	let rez = [];
	for (let i = 1; i <= Math.min(...nums); i++) {
		if (nums.every((el) => el % i === 0)) {
			rez.push(i);
		}
	}
	return rez.join(', ');
};

app.get('/214', (req, res) => {
	let rez = findSimilarDividers(...Object.values(req.query).map((el) => Number(el)));

	if (req.query) {
		res.render('task4', {
			result: rez
		});
	} else {
		res.render('task4');
	}
});

// №5⊗jsPmSMMA
// Напишите скрипт, который будет находить корни квадратного уравнения. Для этого сделайте 3 инпута, в которые будут вводиться коэффициенты уравнения.
const findRoots = (a, b, c) => {
	let d = b * b - 4 * a * c;
	if (d < 0) {
		return 'Нет корней';
	} else if (d === 0) {
		return `x = ${-b / (2 * a)}`;
	} else {
		return `x1 = ${(-b + Math.sqrt(d)) / (2 * a)}, x2 = ${(-b - Math.sqrt(d)) / (2 * a)}`;
	}
};

app.get('/215', (req, res) => {
	if (req.query.a) {
		res.render('task5', {
			result: findRoots(Number(req.query.a), Number(req.query.b), Number(req.query.c))
		});
	} else {
		res.render('task5');
	}
});

// №6⊗jsPmSMMA
// Даны 3 инпута. В них вводятся числа. Проверьте, что эти числа являются тройкой Пифагора: квадрат самого большого числа должен быть равен сумме квадратов двух остальных.
/*
a² + b² = c².
*/
const isComboPifagor = (...nums) => {
	let rez = [...nums].sort((a, b) => a - b);
	return rez[0] * rez[0] + rez[1] * rez[1] === rez[2] * rez[2];
};

app.get('/216', (req, res) => {
	if (req.query.num1) {
		res.render('task6', {
			result: isComboPifagor(Number(req.query.num1), Number(req.query.num2), Number(req.query.num3))
		});
	} else {
		res.render('task6');
	}
});

// №7⊗jsPmSMMA
// Дан инпут и кнопка. В этот инпут вводится дата рождения в формате '01.12.1990'. По нажатию на кнопку выведите на экран сколько дней осталось до дня рождения пользователя.
function parseDMY(str) {
	//  '01.12.1990'
	let [day, month, year] = str.split('.');
	return new Date(year, month - 1, day);
}

function calcDays(dateStr) {
	const now = new Date();
	const birthday = parseDMY(dateStr);

	birthday.setFullYear(now.getFullYear());
	if (birthday < now) {
		birthday.setFullYear(now.getFullYear() + 1);
	}

	const diffMs = birthday - now;
	const diffDays = diffMs / (1000 * 60 * 60 * 24);

	console.log('birthday:', birthday.toISOString());
	console.log('now     :', now.toISOString());
	console.log('diff (days) :', diffDays);
}
calcDays('01.12.1990');

app.get('/217', (req, res) => {
	if (req.query.num1) {
		res.render('task7', {
			result: calcDays(req.query.num1)
		});
	} else {
		res.render('task7');
	}
});

// №8⊗jsPmSMMA
// Дан текстареа и кнопка. В текстареа вводится текст. По нажатию на кнопку выведите количество слов и количество символов в тексте.
app.use(express.urlencoded({ extended: true }));
const textInfo = (text) => {
	let words = text.split(' ');
	let symbols = text.split('').length;
	return `Количество слов: ${words.length}, \nКоличество символов: ${symbols}`;
};

app.get('/218', (req, res) => {
	res.render('task8');
});

app.post('/218', (req, res) => {
	if (req.body.text) {
		res.render('task8', {
			result: textInfo(req.body.text)
		});
	} else {
		res.render('task8');
	}
});

// №9⊗jsPmSMMA
// Дан текстареа и кнопка. В текстареа вводится текст. По нажатию на кнопку нужно посчитать процентное содержание каждого символа в тексте.
const textAnalizer = (text) => {
	text = text.replace(/\s/g, '').toLowerCase(); //delete spaces
	let symbols = text.split('');
	let obj = {};
	for (let i = 0; i < symbols.length; i++) {
		if (obj[symbols[i]]) {
			obj[symbols[i]]++;
		} else {
			obj[symbols[i]] = 1;
		}
	}
	let objWithPercentages = Object.fromEntries(
		Object.entries(obj).map(([key, value]) => [
			key,
			((value / symbols.length) * 100).toFixed(2) + '%'
		])
	);

	return JSON.stringify(objWithPercentages);
};
app.get('/219', (req, res) => {
	res.render('task9');
});

app.post('/219', (req, res) => {
	if (req.body.text) {
		res.render('task9', {
			result: textAnalizer(req.body.text)
		});
	} else {
		res.render('task9');
	}
});

// №10⊗jsPmSMMA
// Даны 3 селекта и кнопка. Первый селект - это дни от 1 до 31, второй селект - это месяцы от января до декабря, а третий - это годы от 1990 до 2025. С помощью этих селектов можно выбрать дату. По нажатию на кнопку выведите на экран день недели, соответствующий этой дате.
const weekDays = {
	0: 'воскресенье',
	1: 'понедельник',
	2: 'вторник',
	3: 'среда',
	4: 'четверг',
	5: 'пятница',
	6: 'суббота'
};

const dateAnalizer = (day, month, year) => {
	const date = new Date(Number(year), Number(month), Number(day));
	console.log(date);
	return `день недели, соответствующий этой дате  ${date} – ${weekDays[date.getDay()]}`;
};
app.get('/220', (req, res) => {
	res.render('task10');
});

app.post('/220', (req, res) => {
	if (req.body) {
		res.render('task10', {
			result: dateAnalizer(req.body.day, req.body.month, req.body.year)
		});
	} else {
		res.render('task10');
	}
});

// №11⊗jsPmSMMA
// Сделайте скрипт-гороскоп. Внутри него хранится массив гороскопов на несколько дней вперед для каждого знака зодиака. По заходу на страницу спросите у пользователя дату рождения, определите его знак зодиака и выведите предсказание для этого знака зодиака на текущий день.

const horoscopes = {
	Овен: [
		'День 1: Сегодня отличное время для начала нового проекта.',
		'День 2: Вас ждёт неожиданная встреча, которая принесёт новые идеи.',
		'День 3: Постарайтесь сохранить спокойствие в сложной ситуации.',
		'День 4: День принесёт финансовые возможности и поддержку друзей.',
		'День 5: Обратите внимание на здоровье — займитесь спортом или прогуляйтесь.',
		'День 6: Хороший день для того, чтобы проявить лидерские качества.',
		'День 7: Ваши творческие замыслы получат положительный отклик.'
	],
	Телец: [
		'День 1: Сегодня вам удастся добиться поставленных целей.',
		'День 2: День обещает быть насыщенным и продуктивным.',
		'День 3: Будьте открыты для новых знакомств — они могут сыграть важную роль.',
		'День 4: Не упускайте шанс улучшить материальное положение.',
		'День 5: Возможны приятные сюрпризы от близких людей.',
		'День 6: Постарайтесь найти баланс между работой и отдыхом.',
		'День 7: День для самопознания и личностного роста.'
	],
	Близнецы: [
		'День 1: Сегодня вы будете в центре внимания, используйте это в свою пользу.',
		'День 2: День благоприятен для деловых переговоров и общения.',
		'День 3: Ожидается прилив вдохновения и новых идей.',
		'День 4: Будьте внимательны к мелочам — они могут иметь большое значение.',
		'День 5: День для принятия важных решений.',
		'День 6: Ваши коммуникативные навыки принесут успех.',
		'День 7: Расслабьтесь и посвятите время близким людям.'
	],
	Рак: [
		'День 1: Сегодня ваше эмоциональное состояние будет на высоте.',
		'День 2: Возможно, вам предстоит решать семейные вопросы.',
		'День 3: День благоприятен для творчества и самовыражения.',
		'День 4: Будьте готовы к приятной неожиданности от друзей.',
		'День 5: День для того, чтобы уделить внимание своему здоровью.',
		'День 6: Возможны позитивные перемены в личной жизни.',
		'День 7: Доверяйте своей интуиции — она не подведёт.'
	],
	Лев: [
		'День 1: Сегодня вы почувствуете прилив уверенности и энергии.',
		'День 2: День для реализации амбициозных планов.',
		'День 3: Вас ждёт поддержка со стороны близких и коллег.',
		'День 4: Отличное время для романтических встреч.',
		'День 5: Постарайтесь не затягивать важные дела — действуйте решительно.',
		'День 6: День для творчества и самовыражения.',
		'День 7: Ваш оптимизм будет заразителен для окружающих.'
	],
	Дева: [
		'День 1: Сегодня всё складывается благодаря вашей аккуратности и планированию.',
		'День 2: День для решения накопившихся вопросов на работе.',
		'День 3: Ожидайте конструктивной критики, которая поможет вам расти.',
		'День 4: Постарайтесь не перегружать себя лишними делами.',
		'День 5: День для самоанализа и исправления ошибок.',
		'День 6: Ваш практичный подход принесёт успех в сложных задачах.',
		'День 7: Расслабьтесь и уделите время отдыху.'
	],
	Весы: [
		'День 1: Сегодня гармония и баланс будут вашими главными союзниками.',
		'День 2: День благоприятен для общения и установления новых контактов.',
		'День 3: Возможно, вам предстоит сделать важный выбор.',
		'День 4: Постарайтесь сохранить спокойствие в конфликтных ситуациях.',
		'День 5: День для творчества и художественного вдохновения.',
		'День 6: Ваше умение находить компромиссы принесёт плоды.',
		'День 7: День, когда важно доверять своему сердцу и интуиции.'
	],
	Скорпион: [
		'День 1: Сегодня интуиция подсказывает вам верные решения.',
		'День 2: День для глубоких размышлений и анализа.',
		'День 3: Возможны резкие перемены — будьте готовы к ним.',
		'День 4: День для работы над собой и устранения негативных привычек.',
		'День 5: Не бойтесь проявить страсть и энергию в делах.',
		'День 6: Ваши усилия будут вознаграждены неожиданными событиями.',
		'День 7: День для восстановления внутренней гармонии.'
	],
	Стрелец: [
		'День 1: Сегодня открываются новые возможности для путешествий и приключений.',
		'День 2: День для обучения и получения новых знаний.',
		'День 3: Ваш оптимизм поможет справиться с любыми трудностями.',
		'День 4: Постарайтесь уделить внимание близким людям.',
		'День 5: День для смелых решений и экспериментов.',
		'День 6: Ваш энтузиазм заразителен для окружающих.',
		'День 7: День для отдыха и размышлений о будущем.'
	],
	Козерог: [
		'День 1: Сегодня вас ждёт плодотворная работа и новые достижения.',
		'День 2: День для концентрации на главном и планирования.',
		'День 3: Возможно, придётся столкнуться с непредвиденными трудностями.',
		'День 4: День для укрепления деловых связей и партнерств.',
		'День 5: Постарайтесь найти время для отдыха и восстановления сил.',
		'День 6: Ваши усилия приведут к значимым результатам.',
		'День 7: День для личного развития и самосовершенствования.'
	],
	Водолей: [
		'День 1: Сегодня вас ждут интересные идеи и новые проекты.',
		'День 2: День для экспериментов и нестандартных решений.',
		'День 3: Ваш творческий потенциал достигнет своего пика.',
		'День 4: Возможны неожиданные встречи, открывающие новые перспективы.',
		'День 5: День для работы в команде и обмена идеями.',
		'День 6: Постарайтесь сохранять объективность в сложных ситуациях.',
		'День 7: День для саморазвития и расширения кругозора.'
	],
	Рыбы: [
		'День 1: Сегодня ваше воображение будет особенно ярким.',
		'День 2: День для эмоциональной близости и доверительных разговоров.',
		'День 3: Возможно, вы почувствуете прилив вдохновения и креативности.',
		'День 4: Постарайтесь найти время для медитации и внутренней гармонии.',
		'День 5: День для творческих экспериментов и новых начинаний.',
		'День 6: Ваши мечты могут стать реальностью, если вы в них поверите.',
		'День 7: День для восстановления сил и зарядки позитивом.'
	]
};

const findForecast = (date) => {
	const dateArr = date.split('.');
	const day = parseInt(dateArr[0], 10);
	const month = parseInt(dateArr[1], 10);

	let zodiac = '';

	if ((month === 3 && day >= 21) || (month === 4 && day <= 20)) {
		zodiac = 'Овен';
	} else if ((month === 4 && day >= 21) || (month === 5 && day <= 21)) {
		zodiac = 'Телец';
	} else if ((month === 5 && day >= 22) || (month === 6 && day <= 21)) {
		zodiac = 'Близнецы';
	} else if ((month === 6 && day >= 22) || (month === 7 && day <= 22)) {
		zodiac = 'Рак';
	} else if ((month === 7 && day >= 23) || (month === 8 && day <= 23)) {
		zodiac = 'Лев';
	} else if ((month === 8 && day >= 24) || (month === 9 && day <= 23)) {
		zodiac = 'Дева';
	} else if ((month === 9 && day >= 24) || (month === 10 && day <= 23)) {
		zodiac = 'Весы';
	} else if ((month === 10 && day >= 24) || (month === 11 && day <= 22)) {
		zodiac = 'Скорпион';
	} else if ((month === 11 && day >= 23) || (month === 12 && day <= 21)) {
		zodiac = 'Стрелец';
	} else if ((month === 12 && day >= 22) || (month === 1 && day <= 20)) {
		zodiac = 'Козерог';
	} else if ((month === 1 && day >= 21) || (month === 2 && day <= 19)) {
		zodiac = 'Водолей';
	} else if ((month === 2 && day >= 20) || (month === 3 && day <= 20)) {
		zodiac = 'Рыбы';
	} else {
		zodiac = 'неизвестен';
	}

	return `Ваш знак зодиака: ${zodiac}
	Ваше предсказания для дня - ${weekDays[new Date().getDay()]} - следующее: 
	${horoscopes[zodiac][new Date().getDay()]}
	`;
};

app.get('/221', (req, res) => {
	if (req.query.birthday) {
		res.render('task11', {
			// 19.02.2010
			result: findForecast(req.query.birthday)
		});
	} else {
		res.render('task11');
	}
});

app.listen(3000, () => console.log('Server started: http://localhost:3000'));
